apply plugin: 'application'

dependencies {
	compile project(':org.xtext.example.mydsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.java:${xtextVersion}"
}

// Add a start script for the socket case
mainClassName = 'org.xtext.example.mydsl.ide.RunServer'
startScripts {
	applicationName = 'mydsl-socket'
}

// Add another start script for the standalone / self-contained case
task standaloneStartScript(type: CreateStartScripts) {
	mainClassName = 'org.eclipse.xtext.ide.server.ServerLauncher'
	applicationName = 'mydsl-standalone'
	outputDir = new File(project.buildDir, 'scripts')
	classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
	from(standaloneStartScript)
	fileMode = 0755
}